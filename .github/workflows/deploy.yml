name: Build and deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build an image
        run: make USER=${{ vars.DOCKERHUB_USERNAME }} TAG=${{ github.sha }} build .

      - name: Push an image
        run: docker push ${{ vars.DOCKERHUB_USERNAME }}/helsinki-guide:${{ github.sha }}

      - name: Add an SSH key
        run: touch ~/env_key && echo '${{ secrets.KEY}}' > ~/env_key && chmod 600 ~/env_key
      
      - name: Copy a startup script
        run: scp -o StrictHostKeyChecking=no -i ~/env_key ./deployments${{ vars.SCRIPT_PATH}} ${{ secrets.USER}}@${{ secrets.HOST}}:${{ secrets.ROOT_PATH}}

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
      
      - name: Add a server CA certificate
        run: echo '${{ secrets.CA}}' > /usr/local/share/ca-certificates/guide_ca.crt; update-ca-certificates

      - name: Add a client certificate
        run: mkdir ~/.postgresql; echo '${{ secrets.CLIENT_CERT}}' > ~/.postgresql/postgresql.crt
      
      - name: Add a client private key
        run: echo '${{ secrets.CLIENT_TLS_KEY}}' > ~/.postgresql/postgresql.key

      - name: Run migrations
        run: migrate -database '${{ secrets.MIGRATION_URL}}' -path ./internal/bot/infrastructure/migrations up

      - name: Run the service
        env:
          RUN_COMMAND: "${{ secrets.ROOT_PATH}}${{ vars.SCRIPT_PATH}} \ 
          '${{ secrets.DATABASE_URL}}' '${{ secrets.BOT_TOKEN}}' \ 
          '${{ github.sha}}' '${{ secrets.METRICS_USER}}' \ 
          '${{ secrets.METRICS_PASSWORD}}' '${{ secrets.METRICS_PORT}}'"
        run: ssh -o StrictHostKeyChecking=no -i ~/env_key ${{ secrets.USER}}@${{ secrets.HOST}} "source $RUN_COMMAND"